<!DOCTYPE html>
<html>
<head>
  <title>Solar Smash - solor smash</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      overflow: hidden;
      background: black;
      font-family: sans-serif;
    }
    canvas {
      display: block;
    }
    #stats {
      position: fixed;
      top: 50%;
      left: 20px;
      transform: translateY(-50%);
      background: rgba(0,0,0,0.6);
      color: #0ff;
      padding: 10px;
      border-radius: 8px;
      z-index: 10;
      font-size: 14px;
    }
  </style>
</head>
<body>
<canvas id="canvas"></canvas>
<div id="stats">
  <div>üë•first population: <span id="totalPop">8,000,000,000</span></div>
  <div>üíÄ deaths: <span id="deaths">0</span></div>
  <div>‚ù§Ô∏è persent of alive<span id="percent">100%</span></div>
</div>

<script>
const canvas = document.getElementById("canvas");
const ctx = canvas.getContext("2d");
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

let earth = new Image();
earth.crossOrigin = "anonymous";
earth.src = "https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/The_Earth_seen_from_Apollo_17.jpg/600px-The_Earth_seen_from_Apollo_17.jpg";

let totalPopulation = 8000000000;
let deaths = 0;
let explosions = [];

earth.onload = () => {
  ctx.drawImage(earth, canvas.width/2 - 150, canvas.height/2 - 150, 300, 300);
};

canvas.addEventListener("click", e => {
  explosions.push({ x: e.clientX, y: e.clientY, r: 0 });

  let killed = Math.floor(Math.random() * 50000000) + 10000000;
  deaths += killed;
  if (deaths > totalPopulation) deaths = totalPopulation;
  updateStats();


  let imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
  let cx = e.clientX;
  let cy = e.clientY;
  let radius = 30;
  for (let y = -radius; y < radius; y++) {
    for (let x = -radius; x < radius; x++) {
      let dx = cx + x;
      let dy = cy + y;
      let dist = Math.sqrt(x*x + y*y);
      if (dist < radius && dx >= 0 && dy >= 0 && dx < canvas.width && dy < canvas.height) {
        let index = (dy * canvas.width + dx) * 4;
        imageData.data[index] = 0;
        imageData.data[index+1] = 0;
        imageData.data[index+2] = 0;
      }
    }
  }
  ctx.putImageData(imageData, 0, 0);
});

function updateStats() {
  document.getElementById("deaths").textContent = deaths.toLocaleString();
  let percent = ((totalPopulation - deaths) / totalPopulation * 100).toFixed(2);
  document.getElementById("percent").textContent = percent + "%";
}

function draw() {
  for (let ex of explosions) {
    ctx.beginPath();
    ctx.arc(ex.x, ex.y, ex.r, 0, Math.PI*2);
    ctx.strokeStyle = `rgba(255,0,0,${1 - ex.r/100})`;
    ctx.lineWidth = 2;
    ctx.stroke();
    ex.r += 2;
  }
  explosions = explosions.filter(ex => ex.r < 100);
  requestAnimationFrame(draw);
}

draw();
</script>
</body>
</html>
